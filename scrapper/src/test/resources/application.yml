app:
  database-access-type: jpa

  scheduler:
    enable: true
    interval: 5s
    force-check-delay: 10s
    check-interval: 100s

  retry:
    max-attempts: 3
    retry-status-codes: 500, 502, 503, 504
    type: linear
    delay-config:
      constant:
        back-off-period-millis: 1000
      linear:
        initial-interval-millis: 1000
        max-interval-millis: 5000
      exponential:
        initial-interval-millis: 1000
        multiplier: 2
        max-interval-millis: 100000

client:
  bot:
    base-url: http://localhost:8089
  github:
    base-url: http://localhost:8089
  stackoverflow:
    base-url: http://localhost:8089

spring:
  liquibase:
    enabled: false
  application:
    name: scrapper

  datasource:
    url: jdbc:postgresql://localhost:5432/scrapper
    username: postgres
    password: postgres
    driverClassName: org.postgresql.Driver

  cache:
    jcache:
      provider: com.github.benmanes.caffeine.jcache.spi.CaffeineCachingProvider
    caffeine:
      spec: maximumSize=100000,expireAfterAccess=60s
    cache-names:
      - rate-limit-buckets-scrapper


bucket4j:
  enabled: true
  filters:
    - cache-name: rate-limit-buckets-scrapper
      url: /.*
      http-response-body: "{ \"status\": 429, \"error\": \"Too Many Requests\", \"message\": \"You have exhausted your API Request Quota\" }"
      rate-limits:
        - bandwidths:
            - capacity: 100
              time: 1
              unit: minutes
              refill-speed: interval


server:
  port: 8080

logging:
  config: classpath:log4j2-plain.xml
